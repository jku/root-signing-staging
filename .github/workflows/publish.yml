name: TUF-on-CI publish

permissions: {}

on:
  workflow_dispatch:
    inputs:
      ref:
        type: string
        required: false

concurrency:
  group: publish
  cancel-in-progress: true

jobs:
  build:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - id: build-and-upload-repository
        uses: theupdateframework/tuf-on-ci/actions/upload-repository@3a44844ab0dc6883849df4039f8494b6f7b5386c # v0.7.0
        with:
          gh_pages: true
          ref: ${{ inputs.ref }}
          metadata_path: './'

  deploy-to-pages:
    permissions:
      pages: write
      id-token: write # for authenticating to GH Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy TUF-on-CI repository to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@decdde0ac072f6dcbe43649d82d9c635fff5b4e4 # v4.0.4

  test-deployed-pages:
    needs: deploy-to-pages
    permissions:
      issues: 'write' # for modifying Issues
      id-token: 'write' # for signing with the GitHub Actions workflow identity
    uses: ./.github/workflows/test.yml

  deploy-to-gcs-light:
    needs: [build, test-deployed-pages]
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write' # For authenticating with the GitHub workflow identity
    outputs:
      deployed: ${{ steps.timestamp-deploy.outputs.deployed }}
    steps:
      - uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: github-pages

      - uses: google-github-actions/auth@a6e2e39c0a0331da29f7fd2c2a20a427e8d3ad1f # v2.1.1
        with:
          token_format: 'access_token'
          gcp_workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          gcp_service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}

      - uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200 # v2.1.0
        with:
          project_id: projectsigstore-staging

      - name: Deploy timestamp (if no other changes)
        id: timestamp-deploy
        run: |
          BUCKET="gs://tuf-root-staging/"
          LOAD_BALANCER="tuf-repo-cdn-lb"

          # Extract the github-pages archive into ./repository/
          mkdir repository
          tar --directory repository -xvf artifact.tar

          # download current content
          gcloud storage rsync --recursive $BUCKET current-repository

          # Test what the changes would be if we exclude timestamp
          rsync --recursive current-repository/ new-repository/
          rsync --recursive --exclude=timestamp.json repository/ new-repository/
          if diff --brief --recursive current-repository new-repository; then
              echo No changes detected outside of timestamp: deploying timestamp.json
              gcloud storage cp --cache-control=no-store repository/timestamp.json ${BUCKET}

              # invalidate CDN cache
              gcloud compute url-maps invalidate-cdn-cache $LOAD_BALANCER --path "/*" --async

              echo "deployed=true" >> "$GITHUB_OUTPUT"
          else
              echo Full repository deployment needed
              echo "deployed=false" >> "$GITHUB_OUTPUT"
          fi

  deploy-to-gcs-full:
    needs: [deploy-to-gcs-light]
    runs-on: ubuntu-latest
    if: needs.deploy-to-gcs-light.outputs.deployed != 'true'
    environment: GCS deployment
    permissions:
      id-token: 'write' # for authenticating with OIDC
    steps:
      - uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: github-pages

      - uses: google-github-actions/auth@a6e2e39c0a0331da29f7fd2c2a20a427e8d3ad1f # v2.1.1
        with:
          token_format: 'access_token'
          gcp_workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          gcp_service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}

      - uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200 # v2.1.0
        with:
          project_id: projectsigstore-staging

      - name: Upload full repository to GCS
        run: |
          BUCKET="gs://tuf-root-staging/"
          LOAD_BALANCER="tuf-repo-cdn-lb"

          # Extract the github-pages archive into ./repository/
          mkdir repository
          tar --directory repository -xvf artifact.tar

          # Upload repository, make sure we upload timestamp last
          gcloud storage rsync --checksums-only --cache-control=no-store --recursive --exclude=timestamp.json \
              repository/ $BUCKET
          gcloud storage cp --cache-control=no-store repository/timestamp.json ${BUCKET}

          # invalidate CDN cache
          gcloud compute url-maps invalidate-cdn-cache $LOAD_BALANCER --path "/*" --async

  test-deployed-gcs:
    needs: [deploy-to-gcs-light, deploy-to-gcs-full]
    if: always() && !failure() && !cancelled()
    permissions:
      issues: 'write' # for modifying Issues
      id-token: 'write' # for signing with the GitHub Actions workflow identity
    uses: ./.github/workflows/test-gcs.yml

  update-issue:
    runs-on: ubuntu-latest
    needs: [build, deploy-to-pages, test-deployed-pages, deploy-to-gcs-light, deploy-to-gcs-full, test-deployed-gcs]
    if: always() && !cancelled()
    permissions:
      issues: 'write' # for modifying Issues
    steps:
      - name: Update the issue for the workflow
        uses: theupdateframework/tuf-on-ci/actions/update-issue@3a44844ab0dc6883849df4039f8494b6f7b5386c # v0.7.0
        with:
          token: ${{ secrets.TUF_ON_CI_TOKEN || secrets.GITHUB_TOKEN }}
          success: ${{ !contains(needs.*.result, 'failure') }}
